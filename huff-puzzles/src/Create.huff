 
/** 
 *  CREATE HUFF EXERCISE
 *  
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function makeContract() payable returns(address)

// Creating of the contract, calling it and returning the value from it
// #define macro TEST() = takes (0) returns (0) {
//     0x6B620caffe60005260206000F3600052600c6014F3
//     0x00 mstore
//     0x15 0x0b 0x00 
//     create
//     0x00 0x00 mstore
//     0x20         
//     0x00           
//     0x00           
//     0x00           
//     0x00         
//     dup6        
//     gas 
//     call 
//     0x20 0x00 return
// }

 #define macro MAKE_CONTRACT() = takes (0) returns (0) {
    // runtime code: 0x620caffe60005260206000F3 of the contract which will return 0xcaffe
    // init code + runtime code: 0x6B620caffe60005260206000F3600052600c6014F3
    0x6B620caffe60005260206000F3600052600c6014F3
    0x00 mstore
    0x15 0x0b 0x00 
    create
    0x00 mstore
    0x20 0x00 return
 }

 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(makeContract) eq makeContract jumpi

    0x00 0x00 revert

    makeContract:
        MAKE_CONTRACT()
 }